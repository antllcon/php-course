{% extends 'base.html.twig' %}

{% block title %}–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è{% endblock %}

{% block stylesheets %}
    <link rel="stylesheet" href="{{ asset('assets/css/register.css') }}">
{% endblock %}

{% block body %}
    <h1>–†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º –ø—Ä–æ—Ñ–∏–ª—å</h1>

    {% if error is defined and error is not empty %}
        <div class="alert alert-danger">
            {{ error }}
        </div>
    {% endif %}

    <div class="form-container">
        <form action="{{ path('user_edit', {'id': user.id}) }}" method="post" enctype="multipart/form-data">
            <div class="avatar-upload">
                <div class="avatar-preview" id="avatarPreview"
                    {% if user.avatarPath %}
                        style="background-image: url('{{ asset(user.avatarPath) }}'); background-size: cover; background-position: center;"
                    {% endif %}
                >
                    {% if not user.avatarPath %}
                        <span>–§–æ—Ç–æ</span>
                    {% endif %}
                </div>

                <input type="file" name="avatar" id="avatarUpload" accept="image/jpeg image/png image/gif"
                       style="display: none;">
                <button type="button" onclick="document.getElementById('avatarUpload').click()">–í—ã–±—Ä–∞—Ç—å —Ñ–æ—Ç–æ</button>
                {% if user.avatarPath %}
                    <button type="button" onclick="removeAvatar()">–£–¥–∞–ª–∏—Ç—å —Ñ–æ—Ç–æ</button>
                    <input type="hidden" name="remove_avatar" id="removeAvatarInput" value="0">
                {% endif %}
            </div>

            <div class="name-fields">
                <div class="form-group">
                    <label for="last_name">–§–∞–º–∏–ª–∏—è</label>
                    <input type="text" id="last_name" name="last_name" value="{{ user.lastName }}" required>
                </div>

                <div class="form-group">
                    <label for="first_name">–ò–º—è</label>
                    <input type="text" id="first_name" name="first_name" value="{{ user.firstName }}" required>
                </div>
            </div>

            <div class="form-group">
                <label for="middle_name">–û—Ç—á–µ—Å—Ç–≤–æ</label>
                <input type="text" id="middle_name" name="middle_name" value="{{ user.middleName ?? '' }}">
            </div>

            <div class="form-group">
                <label>–ü–æ–ª</label>
                <div class="radio-group">
                    <div class="radio-option">
                        <input type="radio" id="male" name="gender"
                               value="male" {{ user.gender == 'male' ? 'checked' : '' }} required>
                        <label for="male">–ú—É–∂—Å–∫–æ–π</label>
                    </div>
                    <div class="radio-option">
                        <input type="radio" id="female" name="gender"
                               value="female" {{ user.gender == 'female' ? 'checked' : '' }}>
                        <label for="female">–ñ–µ–Ω—Å–∫–∏–π</label>
                    </div>
                </div>
            </div>

            <div class="form-group">
                <label for="birth_date">–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è</label>
                <input type="date" id="birth_date" name="birth_date" value="{{ user.birthDate|date('Y-m-d') }}"
                       required>
            </div>

            <div class="form-group">
                <label for="email">Email</label>
                <input type="email" id="email" name="email" value="{{ user.email }}" required>
            </div>

            <div class="form-group">
                <label for="phone">–¢–µ–ª–µ—Ñ–æ–Ω</label>
                <input type="tel" id="phone" name="phone" value="{{ user.phone ?? '' }}"
                       placeholder="+7 (XXX) XXX-XX-XX">
            </div>

            <div class="form-group password-wrapper">
                <label for="password">–ü–∞—Ä–æ–ª—å</label>
                <input type="password" id="password" name="password" required>
                <span class="password-toggle">üëÅÔ∏è</span>
                <div class="password-strength">–ù–∞–¥–µ–∂–Ω–æ—Å—Ç—å –ø–∞—Ä–æ–ª—è: —Å—Ä–µ–¥–Ω—è—è</div>
            </div>

            <div class="form-group password-wrapper">
                <label for="password_confirm">–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å</label>
                <input type="password" id="password_confirm" name="password_confirm" required>
                <span class="password-toggle">üëÅÔ∏è</span>
                <div class="password-match">–ü–∞—Ä–æ–ª–∏ –¥–æ–ª–∂–Ω—ã —Å–æ–≤–ø–∞–¥–∞—Ç—å</div>
            </div>

            {% if is_granted('ROLE_ADMIN') %}
                <div class="form-group">
                    <label>–†–æ–ª–∏</label>
                    {% for role in all_roles %}
                        <div class="form-check">
                            <input type="checkbox"
                                   id="role_{{ loop.index }}"
                                   name="roles[]"
                                   value="{{ role }}"
                                   class="form-check-input"
                                {{ role in user.roles ? 'checked' : '' }}
                            >
                            <label class="form-check-label" for="role_{{ loop.index }}">{{ role }}</label>
                        </div>
                    {% endfor %}
                </div>
            {% endif %}

            <div class="button-group">
                <button type="submit">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
                <button type="button" onclick="window.location.href='{{ path('user_show', {'id': user.id}) }}'">–û—Ç–º–µ–Ω–∞
                </button>
            </div>
        </form>
    </div>
{% endblock %}

{% block javascripts %}
    <script>
        document.getElementById('avatarUpload').addEventListener('change', function (e) {
            const file = e.target.files[0];
            if (!file) {
                return;
            }

            const allowedTypes = ['image/jpeg', 'image/png', 'image/gif'];
            if (!allowedTypes.includes(file.type)) {
                alert('–ù–µ–≤–µ—Ä–Ω—ã–π —Ç–∏–ø —Ñ–∞–π–ª–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (JPG, PNG, GIF).');
                e.target.value = '';
                return;
            }

            const reader = new FileReader();
            reader.onload = function (event) {
                const preview = document.getElementById('avatarPreview');
                preview.style.backgroundImage = `url('${event.target.result}')`;
                preview.style.backgroundSize = 'cover';
                preview.style.backgroundPosition = 'center';
                preview.innerHTML = '';
            }
            reader.readAsDataURL(file);
        });

        function removeAvatar() {
            const preview = document.getElementById('avatarPreview');
            preview.style.backgroundImage = 'none';
            preview.innerHTML = '<span>–§–æ—Ç–æ</span>';

            const removeInput = document.getElementById('removeAvatarInput');
            if (removeInput) removeInput.value = '1';

            const removeBtn = document.querySelector('button[onclick="removeAvatar()"]');
            if (removeBtn) removeBtn.style.display = 'none';

            document.getElementById('avatarUpload').value = '';
        }

        document.getElementById('phone').addEventListener('input', function (e) {
            let x = e.target.value.replace(/\D/g, '').match(/(\d?)(\d{0,3})(\d{0,3})(\d{0,2})(\d{0,2})/);
            let formattedPhone = '';
            if (x) {
                formattedPhone = !x[2] ? x[1] : '+' + x[1] + ' (' + x[2] + ')' + (x[3] ? ' ' + x[3] : '') + (x[4] ? '-' + x[4] : '') + (x[5] ? '-' + x[5] : '');
            }
            e.target.value = formattedPhone;
        });

        document.addEventListener('DOMContentLoaded', function () {
            const phoneInput = document.getElementById('phone');
            if (phoneInput.value) {
                let x = phoneInput.value.replace(/\D/g, '').match(/(\d?)(\d{0,3})(\d{0,3})(\d{0,2})(\d{0,2})/);
                let formattedPhone = '';
                if (x) {
                    formattedPhone = !x[2] ? x[1] : '+' + x[1] + ' (' + x[2] + ')' + (x[3] ? ' ' + x[3] : '') + (x[4] ? '-' + x[4] : '') + (x[5] ? '-' + x[5] : '');
                }
                phoneInput.value = formattedPhone;
            }
        });

        document.querySelectorAll('.password-toggle').forEach(toggle => {
            toggle.addEventListener('click', function() {
                const input = this.previousElementSibling;
                input.type = input.type === 'password' ? 'text' : 'password';
            });
        });

        document.getElementById('password_confirm').addEventListener('input', function() {
            const matchElement = this.nextElementSibling.nextElementSibling;
            if (this.value === document.getElementById('password').value) {
                matchElement.textContent = '–ü–∞—Ä–æ–ª–∏ —Å–æ–≤–ø–∞–¥–∞—é—Ç';
                matchElement.classList.add('valid');
                matchElement.classList.remove('invalid');
            } else {
                matchElement.textContent = '–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç';
                matchElement.classList.add('invalid');
                matchElement.classList.remove('valid');
            }
        });
    </script>
{% endblock %}
